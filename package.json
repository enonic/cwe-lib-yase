{
  "author": "Christian Andreas Westgaard <cwe@enonic.com>",
  "ava": {
    "require": [
      "@babel/register"
    ]
  },
  "dependencies": {
    "@enonic/fnv-plus": "^1",
    "@enonic/js-utils": "^0",
    "core-js": "^3",
    "cross-env": "^7",
    "d3-dsv": "^3",
    "deep-object-diff": "^1",
    "diff": "^5",
    "fast-deep-equal": "^3",
    "human-object-diff": "^2",
    "jquery": "^3",
    "jsuri": "^1",
    "semver": "^7",
    "traverse": "^0",
    "uri-js": "^4",
    "uuid": "^8"
  },
  "devDependencies": {
    "@babel/core": "^7",
    "@babel/plugin-proposal-class-properties": "^7",
    "@babel/plugin-proposal-export-default-from": "^7",
    "@babel/plugin-proposal-export-namespace-from": "^7",
    "@babel/plugin-proposal-object-rest-spread": "^7",
    "@babel/plugin-syntax-throw-expressions": "^7",
    "@babel/plugin-transform-arrow-functions": "^7",
    "@babel/plugin-transform-block-scoped-functions": "^7",
    "@babel/plugin-transform-block-scoping": "^7",
    "@babel/plugin-transform-classes": "^7",
    "@babel/plugin-transform-computed-properties": "^7",
    "@babel/plugin-transform-destructuring": "^7",
    "@babel/plugin-transform-duplicate-keys": "^7",
    "@babel/plugin-transform-for-of": "^7",
    "@babel/plugin-transform-function-name": "^7",
    "@babel/plugin-transform-instanceof": "^7",
    "@babel/plugin-transform-literals": "^7",
    "@babel/plugin-transform-member-expression-literals": "^7",
    "@babel/plugin-transform-modules-commonjs": "^7",
    "@babel/plugin-transform-new-target": "^7",
    "@babel/plugin-transform-object-assign": "^7",
    "@babel/plugin-transform-object-super": "^7",
    "@babel/plugin-transform-parameters": "^7",
    "@babel/plugin-transform-property-literals": "^7",
    "@babel/plugin-transform-property-mutators": "^7",
    "@babel/plugin-transform-reserved-words": "^7",
    "@babel/plugin-transform-runtime": "^7",
    "@babel/plugin-transform-shorthand-properties": "^7",
    "@babel/plugin-transform-spread": "^7",
    "@babel/plugin-transform-sticky-regex": "^7",
    "@babel/plugin-transform-template-literals": "^7",
    "@babel/plugin-transform-typeof-symbol": "^7",
    "@babel/plugin-transform-unicode-escapes": "^7",
    "@babel/plugin-transform-unicode-regex": "^7",
    "@babel/preset-env": "^7",
    "@babel/preset-typescript": "^7",
    "@babel/register": "^7",
    "@enonic/mock-xp": "^0.1.3",
    "@rollup/plugin-alias": "^3.1.9",
    "@rollup/plugin-commonjs": "^22",
    "@rollup/plugin-node-resolve": "^13",
    "@rollup/plugin-typescript": "^8",
    "@swc/cli": "^0",
    "@swc/core": "^1",
    "@types/bluebird": "*",
    "@types/jest": "^27",
    "@types/mocha": "^9",
    "@types/node": "^17",
    "@types/traverse": "^0.6.32",
    "@typescript-eslint/eslint-plugin": "^5",
    "@typescript-eslint/parser": "^5",
    "assert": "^2",
    "ava": "^3",
    "babel-eslint": "^10",
    "babel-loader": "^8",
    "babel-plugin-array-includes": "^2",
    "babel-plugin-module-resolver": "^4",
    "cli-color": "^2",
    "colors": "^1.4.0",
    "esbuild": "^0",
    "esbuild-loader": "^2",
    "eslint": "^8",
    "eslint-config-airbnb-base": "^15",
    "eslint-plugin-import": "^2",
    "eslint-plugin-jsx-a11y": "^6",
    "eslint-plugin-react": "^7",
    "eslint-plugin-react-hooks": "^4",
    "glob": "^7",
    "is-uuid": "^1",
    "mocha": "^10",
    "parallel": "^1",
    "path": "^0",
    "q-i": "^2",
    "rollup": "^2",
    "rollup-plugin-typescript2": "^0",
    "swc": "^1",
    "swc-loader": "^0",
    "ts-mocha": "^10",
    "ts-node": "^10",
    "ts-toolbelt": "^9",
    "tsconfig-paths": "^3",
    "tslib": "^2",
    "typescript": "^4",
    "webpack": "^5",
    "webpack-cli": "^4",
    "webpack-dev-server": "^4"
  },
  "license": "Apache-2.0",
  "private": true,
  "repository": {
    "type": "git",
    "url": "git+https://github.com/enonic/lib-explorer"
  },
  "scripts": {
    "build": "yarn build:swc:test",
    "build:es:specs:cjsOld": "find src/main/resources/lib/explorer -name '*.spec.ts' | NODE_PATH=src/main/resources xargs npx esbuild --bundle --format=cjs --outbase=src/main/resources --outdir=build/esbuild/cjs --platform=node --target=node6.4.0 --tsconfig=tsconfig.specs.json",
    "build:es:specs:cjs": "find src/main/resources/lib/explorer -name '*.spec.ts' | NODE_PATH=src/main/resources xargs npx esbuild --bundle --format=cjs --main-fields=module,main --outbase=src/main/resources --outdir=build/esbuild/cjs --platform=neutral --target=es2015 --tsconfig=tsconfig.specs.json",
    "build:es:specs:esm": "find src/main/resources/lib/explorer -name '*.spec.ts' | NODE_PATH=src/main/resources xargs npx esbuild --bundle --format=esm --main-fields=module,main --outbase=src/main/resources --outdir=build/esbuild/esm --out-extension:.js=.mjs --platform=neutral --target=es2015 --tsconfig=tsconfig.specs.json",
    "build:es:esm": "find src/main/resources/lib/explorer -name '*.ts' | xargs npx esbuild --bundle --format=esm --outbase=src/main/resources --outdir=build/esbuild/esm --out-extension:.js=.mjs --platform=node --target=es2015 --tsconfig=tsconfig.json",
    "build:swc": "yarn build:swc:src & yarn build:swc:test",
    "build:swc:src": "find src -name '*.ts' | xargs npx swc --config-file ./.swcrc.json -d build/swc/src --source-root src",
    "build:swc:test": "find test -name '*.ts' | xargs npx swc --config-file ./.swcrc.json -d build/swc/test --source-root test",
    "build:ts": "npx tsc",
    "build:ts:specs": "npx tsc -p tsconfig.specs.json",
    "build:webpack:specs": "npx webpack -c webpack.config.specs.ts",
    "bundle": "npx rollup -c && yarn bundle:tests:async",
    "bundle:tests": "yarn bundle:tests:sync",
    "bundle:tests:sync": "for f in $(find test -name '*.test.ts'); do npx rollup -c rollup.config.tests.js -o build/rollup/test/$(echo $f| cut -d'/' -f2- | sed 's/\\.[^.]*$//').js $f ; done",
    "bundle:tests:async": "find test -name '*.test.ts'|cut -d'/' -f2-|npx parallel npx rollup -c rollup.config.tests.js -o build/rollup/test/{.}.js test/{}",
    "clean": "rm -r build dist 2>/dev/null;true",
    "lint": "npx eslint src/main/resources test",
    "mocha": "npx mocha",
    "prebuild": "yarn clean",
    "prebundle": "yarn clean",
    "premocha": "yarn bundle",
    "pretest": "yarn bundle",
    "profile": "time yarn buildEsEsm && time yarn buildSwc && time yarn buildTs",
    "test": "npx mocha --config .swc.mocharc.cjs",
    "test:ava": "ava --verbose --serial",
    "test:mocha": "find test -name '*.test.mjs' | xargs npx mocha --require @babel/register",
    "test:mocha2": "find test -name '*.test.mjs' | NODE_PATH=./src/main/resources xargs npx mocha --require @babel/register",
    "test:mocha3": "npx cross-env TS_NODE_COMPILER_OPTIONS='{\"module\": \"commonjs\" }' mocha --reporter spec -r ts-node/register -r tsconfig-paths/register src/main/resources/**/*.spec.ts",
    "test:mocha:ts": "npx ts-mocha -p ./tsconfig.json --paths src/main/resources/**/*.spec.ts",
    "test:swc": "find build/swc -name '*.spec.js' | xargs npx mocha --require @babel/register",
    "test:ts": "find build/tsc/specs -name '*.spec.js' | xargs npx mocha --reporter spec --require @babel/register",
    "test:ts2": "npx ts-mocha -p ./tsconfig.specs.json --paths build/tsc/specs/**/*.spec.js",
    "test:es:cjs": "find build/esbuild/cjs -name '*.spec.js' | xargs npx mocha --reporter spec",
    "test:es:esm": "find build/esbuild/esm -name '*.spec.mjs' | xargs npx mocha --reporter spec --require @babel/register",
    "test:webpackSpecs": "find build/webpack/specs -name '*.spec.js' | xargs npx mocha",
    "watch": "webpack -w --stdin",
    "webpack": "webpack"
  }
}
